{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8-final"},"orig_nbformat":2},"trust":false,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"2c2b65","input":"","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"729c1b","input":"%load_ext autoreload\n%autoreload 2\n# import modules.dynpy as dynpy\n# import importlib\n# importlib.reload(dynpy)\n# from modules.dynpy import *\n\n\nfrom dynamics import *\n\n\n# import ode_tools\n# importlib.reload(ode_tools)\n# from ode_tools import *\n\n# import modules.timeseries as timeseries\n# importlib.reload(timeseries)\n# from modules.timeseries import *\n\nfrom sympy import *\nfrom sympy.physics.mechanics import *\nimport sympy as sym\nimport numpy as np\nimport numpy.fft as fft\n\nimport matplotlib.pyplot as plt\n#import pandas as pd\n\nmechanics_printing(pretty_print=True)\n\nm_v,m_p,A_y,A_z,Phi_y,Phi_z,omega,k_c,c,l_w,l_c,k_w = symbols('m_v m_mod_p A_y A_z Phi_y Phi_z omega k_mod_c c l_w l_c k_mod_w')\nm_c,m_p,u_0,u_c0,l_0,l_c,omega,g = symbols('m_mod_c,m_mod_p,u_mod_0,u_mod_c0,l_0,l_c,omega g',positive=True)\n\nomega_c,omega_p,omega_m,omega_d,omega_sw=symbols('omega_c,omega_p,omega_m,omega_d, omega_sw',positive=True)\n\nA1,A2,eps=symbols('A_1,A_2 ,epsilon',real=True)\n\ninvars_dict = {g:9.81,\n               m_c:1e4,\n               k_w:4.09e6\n              }\n\nparams_dict = {A_y:0.5,\n               A_z:1.5,\n               Phi_y:-2.396,#0,\n               Phi_z:0.315,#np.pi/2,\n               omega:float(((1/7)*2*pi).n()),\n               k_c:2.5e6,\n               c:0,\n               l_w:float((((1/7*2*pi *2 ).n() **2*(1-0.5*1.5/48)  )**-1*9.81*4)),\n               l_c:0,\n               m_p:1e5,\n              }\n\n\n\n#3 dof\nt = symbols('t')\ncoords='phi h h_c'\nphi, h, h_c = dynamicsymbols('varphi h_mod h_mod_c')\ndphi, dh, dh_c = dynamicsymbols('varphi h_mod h_mod_c', 1)\nq = Matrix([phi, h, h_c])\nu=q.diff(t)\ndu = q[3:6]\nprint('du')\nnDOF=len(u)\nprint(q)\nprint('u0',u[0])\nparams_list=[m_p,omega]\n\n\n######################################################### testing\n\ne = Symbol('varepsilon')\n\nm1, m2, k, omega, omega0, A1, A2,delta = symbols('m_1 m_2 k omega omega0 A1 A2 delta',\n                                           positive=True)\nx1, x2 = dynamicsymbols('x_1 x_2')\n\nEk = S.One * m1 * x1.diff(t)**2 + S.One / 2 * m1 * x2.diff(t)**2\nEp = S.One * k * x1**2 + 0 * S.One * k * (\n    x1 - x2)**2 + S.One * (k+e*(delta+cos(2*sqrt(2*k/m1) * t))) * x2**2 + e * x1 * cos(omega * t) + (\n        e / 4 * x1**4 + e * 0 * x1 * x2**3)\n\ntest_sys = HarmonicOscillator((Ek - Ep).expand(), [x1, x2],\n                              label='Test system')\ndisplay(test_sys._eoms)\n\n# sys_sol=LinearODESolution(test_sys.subs(k,omega0**2*m1,method='direct'),t,[x1,x2])\n# sys_sol.solution()\n\n#sys_sol=WeakNonlinearProblemSolution(test_sys.subs(k,(omega**2+A1*e+A2*e**2)*m1),t,[x1,x2],eps=Symbol('e'))\n# sys_sol = WeakNonlinearProblemSolution(test_sys._eoms,\n#                                        t, [x1, x2],\n#                                        eps=e,\n#                                        omega=omega * sqrt(m1 / k),\n#                                        params_values={\n#                                            e: 1.5,\n#                                            m1: 10,\n#                                            k: 20,\n#                                            omega: 1.0,\n#                                            Symbol('C1'): 0,\n#                                            Symbol('C2'): 0.1,\n#                                            Symbol('C3'): 0.1,\n#                                            Symbol('C4'): 0.1,\n#                                             Symbol('A_00_1'): 0.2,\n#                                             Symbol('A_00_2'): 0.2,\n#                                             Symbol('A_11_1'): 0.2,\n#                                             Symbol('A_11_2'): 0.2,\n#                                        }\n#                                       )\n\n\n\nsys_sol = MultiTimeScaleMethod(test_sys._eoms,\n                                       t, [x1, x2],\n                                       eps=e,\n                                       omega=omega,\n                                       params_values={\n                                           e: 1.5,\n                                           m1: 10,\n                                           k: 20,\n                                           omega: 1.0,\n                                           Symbol('C1'): 0,\n                                           Symbol('C2'): 0.1,\n                                           Symbol('C3'): 0.1,\n                                           Symbol('C4'): 0.1,\n                                            Symbol('A_00_1'): 0.2,\n                                            Symbol('A_00_2'): 0.2,\n                                            Symbol('A_11_1'): 0.2,\n                                            Symbol('A_11_2'): 0.2,\n                                       }\n                                      )\n\n#display(sys_sol.predicted_solution(order=5,dict=True))\ndisplay(sys_sol.approximation_function(1))\n\n# display(sys_sol.zeroth_approximation(equation=True))\n# display(sys_sol.zeroth_approximation(dict=True))\n# display(sys_sol.first_approximation())\n\n#display(sys_sol.nth_approximation(2))\n\ndisplay(*sys_sol.eoms_approximation(1).doit().expand())\n#sys_sol.nth_eoms_approximation(0)\nprint('+++')\n#sys_sol.eoms_approximation(3).applyfunc(lambda obj: obj.diff(e,0)).subs(e,0)\n#sys_sol.zeroth_approximation(dict=True)\n#sys_sol.nth_approximation(1,dict=True)\ndisplay(sys_sol.nth_order_solution(1))\n#sys_sol.eigenvalue_approximation(order=4)\n#sys_sol.nth_eoms_approximation(0),sys_sol.nth_eoms_approximation(1),sys_sol.nth_eoms_approximation(2),sys_sol.nth_eoms_approximation(3)\n#display(sys_sol(t, order=1)[0])\n# sys_sol(np.linspace(0,10,200),order=3).plot()\n\n# sys_sol(np.linspace(0,10,200),order=1).plot()\n\n######################################### testing\n\n\n\n  ","output":{"0":{"name":"stdout","output_type":"stream","text":"The autoreload extension is already loaded. To reload it, use:\n  %reload_ext autoreload\n"},"1":{"ename":"ImportError","evalue":"attempted relative import with no known parent package","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[1;32m<ipython-input-6-0ee45226f47d>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 9\u001b[1;33m \u001b[1;32mfrom\u001b[0m \u001b[0mdynamics\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     10\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32mc:\\Users\\bogum\\modules\\dynpy\\dynpy\\dynamics.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mitertools\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mitools\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mscipy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mintegrate\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0msolver\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 9\u001b[1;33m \u001b[1;32mfrom\u001b[0m \u001b[1;33m.\u001b[0m\u001b[0mutilities\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtimeseries\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     10\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0mcollections\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mChainMap\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;31mImportError\u001b[0m: attempted relative import with no known parent package"]}},"pos":0,"type":"cell"}
{"id":0,"time":1645129319369,"type":"user"}
{"last_load":1645129318467,"type":"file"}